[{"F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\reportWebVitals.js":"1","F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\components\\Shape.js":"2","F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\index.js":"3","F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\utils\\utils.js":"4","F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\components\\Square.js":"5","F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\components\\Board.js":"6","F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\App.js":"7","F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\components\\Shapes.js":"8","F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\fixtures\\shapes.js":"9"},{"size":364,"mtime":1606565948647,"results":"10","hashOfConfig":"11"},{"size":6466,"mtime":1615242545891,"results":"12","hashOfConfig":"11"},{"size":816,"mtime":1606748528516,"results":"13","hashOfConfig":"11"},{"size":3653,"mtime":1606762152374,"results":"14","hashOfConfig":"11"},{"size":297,"mtime":1606746421200,"results":"15","hashOfConfig":"11"},{"size":1838,"mtime":1606746421189,"results":"16","hashOfConfig":"11"},{"size":7402,"mtime":1606746362225,"results":"17","hashOfConfig":"11"},{"size":1778,"mtime":1606746421197,"results":"18","hashOfConfig":"11"},{"size":1972,"mtime":1606746428503,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16i0ag5",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\reportWebVitals.js",[],"F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\components\\Shape.js",["40","41"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport Square from \"./Square\";\r\n\r\nimport { SHAPES } from \"../fixtures/shapes\";\r\n\r\n// import \"./shape.styles.css\";\r\nimport \"../App.css\";\r\n\r\nconst Shape = ({\r\n  id,\r\n  index,\r\n  onShapeOverBoard,\r\n  random,\r\n  hide,\r\n  columns,\r\n  rows,\r\n  squareSize,\r\n  squareShapeSize,\r\n  boardFields,\r\n  setShadowBoardFields,\r\n}) => {\r\n  const [size, setSize] = useState(squareShapeSize);\r\n  const [renderShape, setRenderShape] = useState([]);\r\n\r\n  const prevIndex = useRef(0);\r\n\r\n  useEffect(() => {\r\n    setSize(squareShapeSize);\r\n  }, [squareShapeSize]);\r\n\r\n  useEffect(() => {\r\n    renderShapeFunc();\r\n  }, [random, size]);\r\n\r\n  const handleTouchStart = (e) => {\r\n    const shape = e.currentTarget;\r\n    const div = shape.parentNode;\r\n\r\n    const { clientX, clientY } = e.touches[0];\r\n\r\n    let shiftX = clientX - shape.getBoundingClientRect().left;\r\n    let shiftY = clientY - shape.getBoundingClientRect().top;\r\n\r\n    let indices = [];\r\n\r\n    setSize(squareSize);\r\n\r\n    shape.classList.add(\"draggable\");\r\n    document.querySelector(\"#root\").append(shape);\r\n\r\n    const moveAt = (clientX, clientY) => {\r\n      shape.style.left = clientX - shiftX + \"px\";\r\n      shape.style.top = clientY - 120 - shiftY + \"px\";\r\n    };\r\n\r\n    moveAt(clientX, clientY);\r\n\r\n    const onTouchMove = (e) => {\r\n      const clientX = e.touches[0].clientX;\r\n      const clientY = e.touches[0].clientY;\r\n\r\n      moveAt(clientX, clientY);\r\n\r\n      shape.style.pointerEvents = \"none\";\r\n\r\n      let elemBelow = document.elementFromPoint(\r\n        clientX - shiftX + squareSize / 2,\r\n        clientY - 120 - shiftY + squareSize / 2\r\n      );\r\n\r\n      shape.style.pointerEvents = \"auto\";\r\n\r\n      if (!elemBelow) return;\r\n\r\n      indices = elemBelow.id.split(\"-\");\r\n\r\n      if (indices.length === 2) {\r\n        if (JSON.stringify(prevIndex.current) !== JSON.stringify(indices)) {\r\n          onShapeOverBoard(indices, index, 2);\r\n        }\r\n        prevIndex.current = indices;\r\n      } else {\r\n        setShadowBoardFields(boardFields);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"touchmove\", onTouchMove, false);\r\n\r\n    shape.ontouchend = function () {\r\n      document.removeEventListener(\"touchmove\", onTouchMove);\r\n\r\n      setSize(squareShapeSize);\r\n\r\n      if (indices.length === 2) {\r\n        onShapeOverBoard(indices, index, 1);\r\n      }\r\n      shape.classList.remove(\"draggable\");\r\n      div.append(shape);\r\n      shape.style.left = clientX - shiftX + \"px\";\r\n      shape.style.top = clientY - shiftY + \"px\";\r\n\r\n      shape.onmouseup = null;\r\n    };\r\n  };\r\n\r\n  /////////////////////////////////////////////////////////////////////////\r\n  //////////// HANDLE MOUSE DOWN ///////////////////////////////////////////\r\n\r\n  const handleMouseDown = (e) => {\r\n    const shape = e.currentTarget;\r\n    const div = shape.parentNode;\r\n\r\n    setSize(squareSize);\r\n\r\n    const { pageX, pageY } = e;\r\n\r\n    let shiftX = e.clientX - shape.getBoundingClientRect().left;\r\n    let shiftY = e.clientY - shape.getBoundingClientRect().top;\r\n    let indices = [];\r\n\r\n    shape.classList.add(\"draggable\");\r\n    document.querySelector(\"#root\").append(shape);\r\n\r\n    const moveAt = (pageX, pageY) => {\r\n      shape.style.left = pageX - shiftX + \"px\";\r\n      shape.style.top = pageY - shiftY + \"px\";\r\n    };\r\n    moveAt(pageX, pageY);\r\n\r\n    const onMouseMove = (e) => {\r\n      moveAt(e.pageX, e.pageY);\r\n\r\n      shape.style.pointerEvents = \"none\";\r\n\r\n      let elemBelow = document.elementFromPoint(\r\n        e.clientX - shiftX + squareSize / 2,\r\n        e.clientY - shiftY + squareSize / 2\r\n      );\r\n\r\n      shape.style.pointerEvents = \"auto\";\r\n\r\n      if (!elemBelow) return;\r\n\r\n      indices = elemBelow.id.split(\"-\");\r\n\r\n      if (indices.length === 2) {\r\n        if (JSON.stringify(prevIndex.current) !== JSON.stringify(indices)) {\r\n          onShapeOverBoard(indices, index, 2);\r\n        }\r\n        prevIndex.current = indices;\r\n      } else {\r\n        setShadowBoardFields(boardFields);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousemove\", onMouseMove);\r\n\r\n    shape.onmouseup = function () {\r\n      document.removeEventListener(\"mousemove\", onMouseMove);\r\n      setSize(squareShapeSize);\r\n\r\n      if (indices.length === 2) {\r\n        onShapeOverBoard(indices, index, 1);\r\n      }\r\n\r\n      shape.classList.remove(\"draggable\");\r\n      div.append(shape);\r\n      shape.style.left = pageX - shiftX + \"px\";\r\n      shape.style.top = pageY - shiftY + \"px\";\r\n\r\n      shape.onmouseup = null;\r\n    };\r\n  };\r\n\r\n  ///////////// RENDER SHAPE ////////////////////////////////\r\n\r\n  const renderShapeFunc = () => {\r\n    const shapeInfo = SHAPES[random];\r\n    const shapeDisplay = [];\r\n\r\n    for (let i = 0; i < rows; i++) {\r\n      for (let j = 0; j < columns; j++) {\r\n        let classes = !shapeInfo[i][j] && \" shape-empty \";\r\n        if (shapeInfo[i][j]) {\r\n          if (i > 0) {\r\n            if (shapeInfo[i - 1][j] === 0) classes += \" border-top\";\r\n          } else if (i === 0) {\r\n            classes += \" border-top\";\r\n          }\r\n          if (i < rows - 1) {\r\n            if (shapeInfo[i + 1][j] === 0) classes += \" border-bottom\";\r\n          } else if (i === rows - 1) {\r\n            classes += \" border-bottom\";\r\n          }\r\n\r\n          if (j > 0) {\r\n            if (shapeInfo[i][j - 1] === 0) classes += \" border-left\";\r\n          } else if (j === 0) {\r\n            classes += \" border-left\";\r\n          }\r\n          if (j < columns - 1) {\r\n            if (shapeInfo[i][j + 1] === 0) classes += \" border-right\";\r\n          } else if (j === columns - 1) {\r\n            classes += \" border-right\";\r\n          }\r\n        }\r\n        classes += \" square-shape-size square-pointer-events\";\r\n\r\n        shapeDisplay.push(\r\n          <Square key={`${i}-${j}`} classes={classes} size={size}></Square>\r\n        );\r\n      }\r\n    }\r\n\r\n    setRenderShape(shapeDisplay);\r\n  };\r\n  ///////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <div\r\n      className=\"box\"\r\n      style={{\r\n        width: columns * size,\r\n        height: rows * size,\r\n      }}\r\n    >\r\n      <div\r\n        style={{ display: \"flex\" }}\r\n        onMouseDown={handleMouseDown}\r\n        onTouchStart={handleTouchStart}\r\n        className={\"shape \" + hide}\r\n        style={{\r\n          width: columns * size,\r\n          height: rows * size,\r\n        }}\r\n        id={id}\r\n      >\r\n        {renderShape}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shape;\r\n","F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\index.js",[],["42","43"],"F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\utils\\utils.js",[],"F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\components\\Square.js",[],"F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\components\\Board.js",["44","45"],"F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\App.js",["46","47","48","49"],"F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\components\\Shapes.js",["50"],"F:\\vs-code\\portfolio-projects\\blockerdocker\\src\\fixtures\\shapes.js",[],{"ruleId":"51","severity":1,"message":"52","line":34,"column":6,"nodeType":"53","endLine":34,"endColumn":20,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":233,"column":9,"nodeType":"57","endLine":236,"endColumn":11},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"51","severity":1,"message":"62","line":18,"column":6,"nodeType":"53","endLine":18,"endColumn":19,"suggestions":"63"},{"ruleId":"51","severity":1,"message":"62","line":22,"column":6,"nodeType":"53","endLine":22,"endColumn":25,"suggestions":"64"},{"ruleId":"51","severity":1,"message":"65","line":150,"column":6,"nodeType":"53","endLine":150,"endColumn":8,"suggestions":"66"},{"ruleId":"51","severity":1,"message":"67","line":167,"column":6,"nodeType":"53","endLine":167,"endColumn":19,"suggestions":"68"},{"ruleId":"51","severity":1,"message":"69","line":174,"column":6,"nodeType":"53","endLine":174,"endColumn":18,"suggestions":"70"},{"ruleId":"51","severity":1,"message":"71","line":178,"column":6,"nodeType":"53","endLine":178,"endColumn":14,"suggestions":"72"},{"ruleId":"51","severity":1,"message":"73","line":22,"column":6,"nodeType":"53","endLine":22,"endColumn":42,"suggestions":"74"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'renderShapeFunc'. Either include it or remove the dependency array.","ArrayExpression",["75"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"React Hook useEffect has a missing dependency: 'makeBoard'. Either include it or remove the dependency array.",["78"],["79"],"React Hook useEffect has missing dependencies: 'squareShapeSize' and 'squareSize'. Either include them or remove the dependency array.",["80"],"React Hook useEffect has missing dependencies: 'count', 'onGameOver', and 'shapesInfo'. Either include them or remove the dependency array.",["81"],"React Hook useEffect has missing dependencies: 'boardFields' and 'onGameOver'. Either include them or remove the dependency array.",["82"],"React Hook useEffect has a missing dependency: 'onChangePoints'. Either include it or remove the dependency array.",["83"],"React Hook useEffect has a missing dependency: 'renderShapesFunc'. Either include it or remove the dependency array.",["84"],{"desc":"85","fix":"86"},"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [random, renderShapeFunc, size]",{"range":"101","text":"102"},"Update the dependencies array to be: [boardFields, makeBoard]",{"range":"103","text":"104"},"Update the dependencies array to be: [makeBoard, shadowBoardFields]",{"range":"105","text":"106"},"Update the dependencies array to be: [squareShapeSize, squareSize]",{"range":"107","text":"108"},"Update the dependencies array to be: [boardFields, count, onGameOver, shapesInfo]",{"range":"109","text":"110"},"Update the dependencies array to be: [boardFields, onGameOver, shapesInfo]",{"range":"111","text":"112"},"Update the dependencies array to be: [onChangePoints, points]",{"range":"113","text":"114"},"Update the dependencies array to be: [shapesInfo, boardFields, soundMute, renderShapesFunc]",{"range":"115","text":"116"},[659,673],"[random, renderShapeFunc, size]",[350,363],"[boardFields, makeBoard]",[430,449],"[makeBoard, shadowBoardFields]",[4218,4220],"[squareShapeSize, squareSize]",[4501,4514],"[boardFields, count, onGameOver, shapesInfo]",[4637,4649],"[boardFields, onGameOver, shapesInfo]",[4700,4708],"[onChangePoints, points]",[456,492],"[shapesInfo, boardFields, soundMute, renderShapesFunc]"]